dados = require '../lib/index.js'

describe 'rolling dice', ->
  beforeEach ->
    dados.setSeed(42)
    
    @addMatchers
      isNaN: () ->
        isNaN @actual
  
  it 'throws out invalid results', ->
    expect(dados.isValid("")).toBeFalsy()
    expect(dados.isValid("()")).toBeFalsy()
    expect(dados.isValid("((0)")).toBeFalsy()
    expect(dados.isValid("4**4")).toBeFalsy()
    expect(dados.roll("")).isNaN()
  
  it 'can roll dice without fancy parsing', ->
    # Comments show which random numbers are used, in real form.
    expect(dados.d(1, 10)).toBe(4) #0.37454011430963874
    expect(dados.d(0, 1)).toBe(0)
    expect(dados.d(1, 2)).toBe(2) # 0.7965429842006415
    expect(dados.d(1, 0)).toBe(0)
    expect(dados.d(-1, 0)).isNaN()
    expect(dados.d(1, -1)).isNaN()
  
  it 'will return plain numbers', ->
    expect(dados.roll("0")).toBe(0)
    expect(dados.roll("1")).toBe(1)
    expect(dados.roll("-1")).toBe(-1)
  
  it 'evaluates parenthesis', ->
    expect(dados.roll("(100)")).toBe(100)
    expect(dados.roll("((101))")).toBe(101)
  
  it 'rolls dice', ->
    # Comments show which random numbers are used, in real form.
    expect(dados.roll("0d1")).toBe(0)
    expect(dados.roll("1d0")).toBe(0)
    expect(dados.roll("1D0")).toBe(0)
    expect(dados.roll("1d10")).toBe(4) # 0.37454011430963874
    expect(dados.roll("1d2")).toBe(2) # 0.7965429842006415
  
  it 'multiplies and divides', ->
    expect(dados.roll("1*3")).toBe(3)
    expect(dados.roll("4/2")).toBe(2)
  
  it 'adds and subtracts', ->
    expect(dados.roll("1+1")).toBe(2)
    expect(dados.roll("5-1")).toBe(4)
    expect(dados.roll("-1")).toBe(-1)
  
  it 'does complex stuff', ->
    expect(dados.roll("1d20+5")).toBe(13) # 0.37454011430963874
    expect(dados.roll("2d10+1d8-5")).toBe(15) # 0.7965429842006415 0.9507143115624785 0.18343478767201304
    expect(dados.roll("1d2d3d4")).toBe(8) #0.7319939383305609 0.7796909974422306 0.5986584862694144,0.5968501614406705 0.1560186385177076 0.4458327575121075 0.15599452378228307 0.09997492050752044 
    # 1d2 = 2  2d3 = 5 5d4 = 8
    expect(dados.roll("(1+2+3)")).toBe(6)
    expect(dados.roll("5+(1+2+3)")).toBe(11)
    expect(dados.roll("1d(1+2+3)")).toBe(1) # 0.05808361107483506
  
  it 'eliminates text at the end', ->
    expect(dados.roll("1d20+3 for spotting the eagle.")).toBe(11)
    expect(dados.roll("1d10+3 for damage")).toBe(11)
